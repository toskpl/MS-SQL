<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/28/2020 12:04:41 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PPL-POZ-NB0452"
  DTS:CreatorName="PSI\tskrzypczak"
  DTS:DTSID="{CAE22F61-AC49-4318-983D-0FDACEA65E6C}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="1045"
  DTS:ObjectName="lab07b_script_component_tran"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="21"
  DTS:VersionGUID="{547EC9C7-8EE6-49B9-BC50-E5F4F549AF88}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CountryXML.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{D4901942-3FA9-4202-A3AC-5C3EE0B6F537}"
      DTS:ObjectName="CountryXML.xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\_TOSKPL\kursSQL\SSIS\SSIS_Lab\Pliki\CountryXML.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6F8EF267-CDCB-40E5-94BD-46AB95607248}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CntInvalidEmail">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DFT Script Component TRAN"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{942DE12D-E3DF-4CDD-8A8A-FB620C008928}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DFT Script Component TRAN"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DFT Script Component TRAN\EmailNotValid"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="EmailNotValid">
              <inputs>
                <input
                  refId="Package\DFT Script Component TRAN\EmailNotValid.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT Script Component TRAN\EmailNotValid.Outputs[Multicast Output 1]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\DFT Script Component TRAN\EmailNotValid.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT Script Component TRAN\EmailValid"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="EmailValid">
              <inputs>
                <input
                  refId="Package\DFT Script Component TRAN\EmailValid.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT Script Component TRAN\EmailValid.Outputs[Multicast Output 1]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\DFT Script Component TRAN\EmailValid.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT Script Component TRAN\OLE EmailAdress"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE EmailAdress"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[EmailAddress]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1250</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT Script Component TRAN\OLE EmailAdress.Connections[OleDbConnection]"
                  connectionManagerID="{D95E9FB7-78A5-4A83-9592-E11C0CCE7112}:external"
                  connectionManagerRefId="Project.ConnectionManagers[AW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].Columns[EmailAddressID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].ExternalColumns[EmailAddressID]"
                      lineageId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].Columns[EmailAddressID]"
                      name="EmailAddressID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].Columns[EmailAddress]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].ExternalColumns[EmailAddress]"
                      length="50"
                      lineageId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].Columns[EmailAddress]"
                      name="EmailAddress"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].ExternalColumns[BusinessEntityID]"
                      dataType="i4"
                      name="BusinessEntityID" />
                    <externalMetadataColumn
                      refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].ExternalColumns[EmailAddressID]"
                      dataType="i4"
                      name="EmailAddressID" />
                    <externalMetadataColumn
                      refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].ExternalColumns[EmailAddress]"
                      dataType="wstr"
                      length="50"
                      name="EmailAddress" />
                    <externalMetadataColumn
                      refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].ExternalColumns[rowguid]"
                      dataType="guid"
                      name="rowguid" />
                    <externalMetadataColumn
                      refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].ExternalColumns[ModifiedDate]"
                      dataType="dbTimeStamp"
                      name="ModifiedDate" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Error Output].Columns[EmailAddressID]"
                      dataType="i4"
                      lineageId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Error Output].Columns[EmailAddressID]"
                      name="EmailAddressID" />
                    <outputColumn
                      refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Error Output].Columns[EmailAddress]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Error Output].Columns[EmailAddress]"
                      name="EmailAddress" />
                    <outputColumn
                      refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT Script Component TRAN\Script Validation Email"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Validation Email"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text.RegularExpressions;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    int InvalidEmailCounter = 0;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        this.Variables.CntInvalidEmail = InvalidEmailCounter;
    }


    public bool IsEmailValid(String EmailAddress)
    {
        string EmailPattern = @"^(([^<>()[\]\\.,;:\s@\""]+"
                        + @"(\.[^<>()[\]\\.,;:\s@\""]+)*)|(\"".+\""))@"
                        + @"((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"
                        + @"\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+"
                        + @"[a-zA-Z]{2,}))$";

        Regex EmailRegex = new Regex(EmailPattern);
        return EmailRegex.IsMatch(EmailAddress);
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        if (IsEmailValid(Row.EmailAddress))
            Row.DirectRowToOutputValid();
        else
        {
            OutputNotValidBuffer.AddRow();
            OutputNotValidBuffer.EmailAddres = Row.EmailAddress;
            OutputNotValidBuffer.EmailAddresId = Row.EmailAddressID;
            OutputNotValidBuffer.ErrorMessage = "Error Valid Email";
            InvalidEmailCounter++;

        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 EmailAddressID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool EmailAddressID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String EmailAddress
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool EmailAddress_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public void DirectRowToOutputValid()
    {
        base.DirectRow(@"OutputValid");
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OutputNotValidBuffer: ScriptBuffer

{
    public OutputNotValidBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String EmailAddres
    {
        set
        {
            this[0] = value;
        }
    }
    public bool EmailAddres_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 EmailAddresId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool EmailAddresId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorMessage
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ErrorMessage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public OutputNotValidBuffer OutputNotValidBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != OutputNotValidBuffer)
        {
            OutputNotValidBuffer.SetEndOfRowset();
            OutputNotValidBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"OutputNotValid"))
            {
                OutputNotValidBuffer = new OutputNotValidBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 CntInvalidEmail
    {
        get
        {
            return (Int32)(ParentComponent.ReadWriteVariables["CntInvalidEmail"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["CntInvalidEmail"].Value = value;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a04d6bc1e7f04a9883aeb2cbd6609869.Properties.Settings.get_Default():SC_a04d6bc1e7f04a9883aeb2cbd6609869.Properties.Sett" +
    "ings")]

namespace SC_a04d6bc1e7f04a9883aeb2cbd6609869.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_a04d6bc1e7f04a9883aeb2cbd6609869</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_a04d6bc1e7f04a9883aeb2cbd6609869</msb:DisplayName>
    <msb:ProjectId>{A3CB6C56-D26D-4716-8ACF-157CB9B62811}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_a04d6bc1e7f04a9883aeb2cbd6609869.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a04d6bc1e7f04a9883aeb2cbd6609869")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a04d6bc1e7f04a9883aeb2cbd6609869")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a04d6bc1e7f04a9883aeb2cbd6609869.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B6486DD9-0695-4A78-90B0-3858B572D151}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a04d6bc1e7f04a9883aeb2cbd6609869</RootNamespace>
    <AssemblyName>SC_a04d6bc1e7f04a9883aeb2cbd6609869</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a04d6bc1e7f04a9883aeb2cbd6609869.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a04d6bc1e7f04a9883aeb2cbd6609869.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a04d6bc1e7f04a9883aeb2cbd6609869.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a04d6bc1e7f04a9883aeb2cbd6609869.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a04d6bc1e7f04a9883aeb2cbd6609869.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a04d6bc1e7f04a9883aeb2cbd6609869.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
sQUAAAQATQUAAAEAigcAAAIAFQYAAAMAawcAAAQATQUAAAEAsQUAAAEA1AgAAAEA/AcAAAEA/AcA
AAEAggMAAAEAggMJAAgGAQARAAgGBgAZAAgGCgApAAgGEAAxAAgGEAA5AAgGEABBAAgGEABJAAgG
EABRAAgGEABZAAgGEABhAAgGEABpAAgGBgCZAAgGBgC5AAgGFQDJAAgGBgCJAGEDBgCJAGwDBgDR
AAgGEADRAKwDGwBxAAgGIABxALEFKgBxAAsHLgB5ADoAMgBxAI0ENwB5AKIDPABxAK8IEABxANAI
QQBxAMAHQQBxAKUERQBxAJQEAQDZAAgGEABxAKgIBgBxAL0HBgCJAAgGBgDpADkHSwCJAB8HUgB5
AK0HQQCJAIsAXACRAAgGBgCJAOQGYwD5AJwEaACJAJMIbwABAWQIdQABAXgDfAAZASwBgQAZAd4I
igChAAgGkADBAAgGBgAuAAsALAEuABMANQEuABsAVAEuACMAXQEuACsAhgEuADMAhgEuADsAhgEu
AEMAXQEuAEsAjAEuAFMAhgEuAFsAowFDAGMA7QEDAWsA7QFBAXsA7QGJAXMAVAGpAXMAVAFYAAMA
AQAEAAUABwALAAgADAAJAA4AAAB0ABEBAAAeBBUBAAB3BxkBAACABBUBAAD/BhkBAABpBBUBAACk
ABEBAAA4BBUBAAANARkBAABRBBUBAADiAxEBAAC8BR0BAACOASIBAADQBycBAgAIAAMAAgAJAAUA
AgAKAAcAAgALAAkAAQAQAAsAAQARAA0AAQASAA8AAQATABEAAQAUABMAAQAVABUAAgAjABcAAQAk
ABcAAgAmABkAAgAnABsAAQAoABsAAgApAB0ABIAAAAEAAAAAAAAAAAAAAAAAQwAAAAQAAAAAAAAA
AAAAAJgAlwAAAAAADwAAAAAAAAAAAAAAoQAGCAAAAAAPAAAAAAAAAAAAAAChACMIAAAAAAQAAAAA
AAAAAAAAAJgArgQAAAAADwAAAAAAAAAAAAAAoQBXBQAAAAAAAAAAAQAAAGMGAAAAAAAAAElEVFNW
YXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAEdldElu
dDMyAFNDX2EwNGQ2YmMxZTdmMDRhOTg4M2FlYjJjYmQ2NjA5ODY5ADxNb2R1bGU+AGdldF9FbWFp
bEFkZHJlc3NJRABJbnB1dElEAEdldE91dHB1dElEAG1zY29ybGliAHNldF9FbWFpbEFkZHJlc0lk
AElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmluaXNoZWQASXNFbWFpbFZhbGlkAERpcmVjdFJv
d1RvT3V0cHV0VmFsaWQAZGVmYXVsdEluc3RhbmNlAHNldF9FcnJvck1lc3NhZ2UAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJl
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2Vu
ZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0
dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1i
bHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29t
cGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAR2V0U3RyaW5nAElzTWF0Y2gAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9D
bnRJbnZhbGlkRW1haWwAc2V0X0NudEludmFsaWRFbWFpbABTQ19hMDRkNmJjMWU3ZjA0YTk4ODNh
ZWIyY2JkNjYwOTg2OS5kbGwAZ2V0X0VtYWlsQWRkcmVzc0lEX0lzTnVsbABzZXRfRW1haWxBZGRy
ZXNJZF9Jc051bGwAc2V0X0Vycm9yTWVzc2FnZV9Jc051bGwAc2V0X0VtYWlsQWRkcmVzX0lzTnVs
bABnZXRfRW1haWxBZGRyZXNzX0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3Rl
bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3Ry
aW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAElucHV0MEJ1ZmZlcgBPdXRwdXROb3RWYWxpZEJ1
ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIASW52YWxpZEVtYWlsQ291bnRlcgAu
Y3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYTA0ZDZiYzFlN2YwNGE5ODgzYWVi
MmNiZDY2MDk4NjkuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNDX2EwNGQ2YmMxZTdmMDRhOTg4M2FlYjJjYmQ2NjA5ODY5LlByb3BlcnRpZXMAZ2V0X1JlYWRX
cml0ZVZhcmlhYmxlcwBzZXRfRW1haWxBZGRyZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1
bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMA
Q29ubmVjdGlvbnMAQnVmZmVycwBnZXRfRW1haWxBZGRyZXNzAEZpbmlzaE91dHB1dHMAQ3JlYXRl
TmV3T3V0cHV0Um93cwBPYmplY3QAZ2V0X0VuZE9mUm93c2V0AFNldEVuZE9mUm93c2V0AGdldF9E
ZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNy
b3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0
AElucHV0MF9Qcm9jZXNzSW5wdXQAUHJpbWVPdXRwdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3Jp
cHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABBZGRSb3cARGlyZWN0
Um93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBSZWdleABnZXRfQXNzZW1ibHkAAACB
M14AKAAoAFsAXgA8AD4AKAApAFsAXABdAFwAXAAuACwAOwA6AFwAcwBAAFwAIgBdACsAKABcAC4A
WwBeADwAPgAoACkAWwBcAF0AXABcAC4ALAA7ADoAXABzAEAAXAAiAF0AKwApACoAKQB8ACgAXAAi
AC4AKwBcACIAKQApAEAAKAAoAFwAWwBbADAALQA5AF0AewAxACwAMwB9AFwALgBbADAALQA5AF0A
ewAxACwAMwB9AFwALgBbADAALQA5AF0AewAxACwAMwB9AFwALgBbADAALQA5AF0AewAxACwAMwB9
AFwAXQApAHwAKAAoAFsAYQAtAHoAQQAtAFoAXAAtADAALQA5AF0AKwBcAC4AKQArAFsAYQAtAHoA
QQAtAFoAXQB7ADIALAB9ACkAKQAkAAEjRQByAHIAbwByACAAVgBhAGwAaQBkACAARQBtAGEAaQBs
AAAXTwB1AHQAcAB1AHQAVgBhAGwAaQBkAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5
ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMA
aQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBz
AHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAB1PAHUAdABwAHUAdABOAG8AdABWAGEAbABpAGQA
AB9DAG4AdABJAG4AdgBhAGwAaQBkAEUAbQBhAGkAbAAAcVMAQwBfAGEAMAA0AGQANgBiAGMAMQBl
ADcAZgAwADQAYQA5ADgAOAAzAGEAZQBiADIAYwBiAGQANgA2ADAAOQA4ADYAOQAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAGp8rpD7HW5HkEJsA8Flk+0ABCABAQgD
IAABBSABARERBCABAQ4FIAEBEVkEIAECDgkgAwESPR0IEkEDBhI9AwYdCAQgAQgIBCABAggEIAEO
CAMgAAIFIAIBCBwGIAICDhF5BSABHQgIAwcBCAYAAggSQQ4EIAASfQYgARKAgRwFAAASgIUGIAEc
EoCJBCABARwIAAESgI0RgJEFIAASgJUHIAIBDhKAlQi3elxWGTTgiQiJhF3NgIDMkQIGCAMGEhgD
BhIcAwYSEAMGEkUDBhJRAwYSVQMGEiQFIAEBEgwDIAAIAyAADgQgAQECCSAEAQgOEj0SQQsgBAEI
HQgdEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASJAMAAAEDKAAIAygAAgMoAA4ECAASUQQI
ABJVBAgAEiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NDX2EwNGQ2YmMxZTdmMDRhOTg4M2FlYjJjYmQ2NjA5ODY5AAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lz
dGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5S
ZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABoOgAAAAAA
AAAAAACCOgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdDoAAAAAAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
QwBfAGEAMAA0AGQANgBiAGMAMQBlADcAZgAwADQAYQA5ADgAOAAzAGEAZQBiADIAYwBiAGQANgA2
ADAAOQA4ADYAOQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYQAwADQAZAA2AGIAYwAx
AGUANwBmADAANABhADkAOAA4ADMAYQBlAGIAMgBjAGIAZAA2ADYAMAA5ADgANgA5AC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBhADAANABk
ADYAYgBjADEAZQA3AGYAMAA0AGEAOQA4ADgAMwBhAGUAYgAyAGMAYgBkADYANgAwADkAOAA2ADkA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYQAwADQAZAA2
AGIAYwAxAGUANwBmADAANABhADkAOAA4ADMAYQBlAGIAMgBjAGIAZAA2ADYAMAA5ADgANgA5AAAA
NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACUOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_a04d6bc1e7f04a9883aeb2cbd6609869</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::CntInvalidEmail</property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">B3</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DFT Script Component TRAN\Script Validation Email.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT Script Component TRAN\Script Validation Email.Inputs[Input 0].Columns[EmailAddressID]"
                      cachedDataType="i4"
                      cachedName="EmailAddressID"
                      lineageId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].Columns[EmailAddressID]" />
                    <inputColumn
                      refId="Package\DFT Script Component TRAN\Script Validation Email.Inputs[Input 0].Columns[EmailAddress]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="EmailAddress"
                      lineageId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output].Columns[EmailAddress]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT Script Component TRAN\Script Validation Email.Outputs[OutputValid]"
                  exclusionGroup="1"
                  name="OutputValid"
                  synchronousInputId="Package\DFT Script Component TRAN\Script Validation Email.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT Script Component TRAN\Script Validation Email.Outputs[OutputNotValid]"
                  hasSideEffects="true"
                  name="OutputNotValid">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT Script Component TRAN\Script Validation Email.Outputs[OutputNotValid].Columns[EmailAddres]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT Script Component TRAN\Script Validation Email.Outputs[OutputNotValid].Columns[EmailAddres]"
                      name="EmailAddres" />
                    <outputColumn
                      refId="Package\DFT Script Component TRAN\Script Validation Email.Outputs[OutputNotValid].Columns[EmailAddresId]"
                      dataType="i4"
                      lineageId="Package\DFT Script Component TRAN\Script Validation Email.Outputs[OutputNotValid].Columns[EmailAddresId]"
                      name="EmailAddresId" />
                    <outputColumn
                      refId="Package\DFT Script Component TRAN\Script Validation Email.Outputs[OutputNotValid].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\DFT Script Component TRAN\Script Validation Email.Outputs[OutputNotValid].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DFT Script Component TRAN.Paths[OLE DB Source Output]"
              endId="Package\DFT Script Component TRAN\Script Validation Email.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\DFT Script Component TRAN\OLE EmailAdress.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\DFT Script Component TRAN.Paths[OutputNotValid]"
              endId="Package\DFT Script Component TRAN\EmailNotValid.Inputs[Multicast Input 1]"
              name="OutputNotValid"
              startId="Package\DFT Script Component TRAN\Script Validation Email.Outputs[OutputNotValid]" />
            <path
              refId="Package\DFT Script Component TRAN.Paths[OutputValid]"
              endId="Package\DFT Script Component TRAN\EmailValid.Inputs[Multicast Input 1]"
              name="OutputValid"
              startId="Package\DFT Script Component TRAN\Script Validation Email.Outputs[OutputValid]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="215,42"
          Id="Package\DFT Script Component TRAN"
          TopLeft="178,79" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\DFT Script Component TRAN">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="127,42"
          Id="Package\DFT Script Component TRAN\EmailValid"
          TopLeft="113,351" />
        <NodeLayout
          Size="184,42"
          Id="Package\DFT Script Component TRAN\Script Validation Email"
          TopLeft="252,223" />
        <NodeLayout
          Size="144,42"
          Id="Package\DFT Script Component TRAN\EmailNotValid"
          TopLeft="438,352" />
        <NodeLayout
          Size="158,42"
          Id="Package\DFT Script Component TRAN\OLE EmailAdress"
          TopLeft="70,51" />
        <EdgeLayout
          Id="Package\DFT Script Component TRAN.Paths[OutputValid]"
          TopLeft="314.666666666667,265">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-138.166666666667,86"
              Start="0,0"
              End="-138.166666666667,78.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.8448275862069" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.8448275862069"
                    Point2="0,34.8448275862069"
                    Point3="-4,34.8448275862069" />
                  <mssgle:LineSegment
                    End="-134.166666666667,34.8448275862069" />
                  <mssgle:CubicBezierSegment
                    Point1="-134.166666666667,34.8448275862069"
                    Point2="-138.166666666667,34.8448275862069"
                    Point3="-138.166666666667,38.8448275862069" />
                  <mssgle:LineSegment
                    End="-138.166666666667,78.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-95.4788411458333,39.8448275862069,52.791015625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT Script Component TRAN.Paths[OutputNotValid]"
          TopLeft="373.333333333333,265">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="136.666666666667,87"
              Start="0,0"
              End="136.666666666667,79.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.25"
                    Point2="0,35.25"
                    Point3="4,35.25" />
                  <mssgle:LineSegment
                    End="132.666666666667,35.25" />
                  <mssgle:CubicBezierSegment
                    Point1="132.666666666667,35.25"
                    Point2="136.666666666667,35.25"
                    Point3="136.666666666667,39.25" />
                  <mssgle:LineSegment
                    End="136.666666666667,79.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="25.5566927083335,40.25,85.55328125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT Script Component TRAN.Paths[OLE DB Source Output]"
          TopLeft="149,93">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="195,130"
              Start="0,0"
              End="195,122.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61" />
                  <mssgle:CubicBezierSegment
                    Point1="0,61"
                    Point2="0,65"
                    Point3="4,65" />
                  <mssgle:LineSegment
                    End="191,65" />
                  <mssgle:CubicBezierSegment
                    Point1="191,65"
                    Point2="195,65"
                    Point3="195,69" />
                  <mssgle:LineSegment
                    End="195,122.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DFT Script Component TRAN\OLE EmailAdress">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>